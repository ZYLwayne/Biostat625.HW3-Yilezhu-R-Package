library(HW3LR)
# 示例数据
set.seed(123)
X <- cbind(1, rnorm(100))  # 自变量矩阵，第一列是截距项
Y <- 5 + 3 * X[, 2] + rnorm(100)  # 因变量
# 运行 linear_regression 函数
results <- linear_regression(X, Y)
# 调用 print_regression_summary 来打印所有输出值
print_regression_summary(results)
usethis::use_testthat()
Y <- c(1, 2, 3)
# 调用函数
results <- linear_regression(X, Y)
test_that("linear_regression computes coefficients correctly", {
# 创建示例数据
set.seed(123)
X <- cbind(1, rnorm(100))  # 自变量矩阵，第一列是截距项
Y <- 5 + 3 * X[, 2] + rnorm(100)  # 因变量
# 运行 linear_regression 函数
results <- linear_regression(X, Y)
# 调用 print_regression_summary 来打印所有输出值
print_regression_summary(results)
})
# 示例数据
set.seed(123)
X <- cbind(1, rnorm(100))  # 自变量矩阵，第一列是截距项
Y <- 5 + 3 * X[, 2] + rnorm(100)  # 因变量
# 运行 linear_regression 函数
results <- linear_regression(X, Y)
# 调用 print_regression_summary 来打印所有输出值
print_regression_summary(results)
library(testthat)
library(HW3LR)  # 替换 HW3LR 为你的 R 包名称
test_that("linear_regression computes coefficients correctly", {
# 创建示例数据
X <- cbind(1, c(1, 2, 3))
Y <- c(1, 2, 3)
# 调用你的函数
results <- linear_regression(X, Y)
# 检查回归系数
expect_equal(length(results$coefficients), 2)  # 应有两个系数
expect_true(is.numeric(results$coefficients))  # 应是数值型
})
library(testthat)
library(HW3LR)  # 替换 HW3LR 为你的 R 包名称
test_that("linear_regression computes coefficients correctly", {
# 创建示例数据
X <- cbind(1, c(1, 2, 3))
Y <- c(1, 2, 3)
# 调用你的函数
results <- linear_regression(X, Y)
# 检查回归系数
expect_equal(length(results$coefficients), 2)  # 应有两个系数
expect_true(is.numeric(results$coefficients))  # 应是数值型
})
usethis::use_testthat()
usethis::use_test("linear-regression")
usethis::use_test("HW3LR")
devtools::test()
devtools::test()
devtools::test()
usethis::use_vignette("linear_model_tutorial")
usethis::use_readme_md()
